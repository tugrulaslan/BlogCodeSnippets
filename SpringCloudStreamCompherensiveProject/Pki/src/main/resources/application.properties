server.port=0
spring.rabbitmq.host=192.168.42.140
###########Certificate Ordered Settings###########
spring.cloud.stream.bindings.certificateOrderedChannel.destination=CREDS_EXCHANGE
spring.cloud.stream.bindings.certificateOrderedChannel.group=certificateOrderedQueue
#automatically groups the listeners in one queue - robin round

spring.cloud.stream.rabbit.bindings.certificateOrderedChannel.consumer.auto-bind-dlq=true
#auto-bind-dlq=true=sets up the DLQ and configures the original queue to send rejections there (for when an exception is thrown)

spring.cloud.stream.rabbit.bindings.certificateOrderedChannel.consumer.republishToDlq=true
#republishToDlq=>the binder publishes the message to the DLQ, with the exception information in headers

spring.cloud.stream.rabbit.bindings.certificateOrderedChannel.consumer.bind-queue=true
#this binds the queue to the destination exchange, later it allows for routing key option

spring.cloud.stream.rabbit.bindings.certificateOrderedChannel.consumer.binding-routing-key=creds.certificate.ordered
#sets queues routing key

spring.cloud.stream.bindings.certificateOrderedChannel.consumer.max-attempts=2
#sets maximum attempts to receive the message upon errors
########################################################################################

spring.zipkin.service.name=credential-messaging-tracker
spring.zipkin.sender.type=web
spring.zipkin.baseUrl=http://192.168.42.140:9411
spring.sleuth.sampler.percentage=1.0
logging.level.org.springframework.cloud.sleuth=DEBUG
