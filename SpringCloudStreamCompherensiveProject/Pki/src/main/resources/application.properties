server.port=8000
spring.rabbitmq.host=localhost
###########Certificate Ordered Settings###########
spring.cloud.stream.bindings.certificateOrderedSubscribableChannel.destination=CREDS_EXCHANGE
spring.cloud.stream.bindings.certificateOrderedSubscribableChannel.group=certificateOrderedQueue
#automatically groups the listeners in one queue - robin round

spring.cloud.stream.rabbit.bindings.certificateOrderedSubscribableChannel.consumer.auto-bind-dlq=true
#auto-bind-dlq=true=sets up the DLQ and configures the original queue to send rejections there (for when an exception is thrown)

spring.cloud.stream.rabbit.bindings.certificateOrderedSubscribableChannel.consumer.republishToDlq=true
#republishToDlq=>the binder publishes the message to the DLQ, with the exception information in headers

spring.cloud.stream.rabbit.bindings.certificateOrderedSubscribableChannel.consumer.bind-queue=true
#this binds the queue to the destination exchange, later it allows for routing key option

spring.cloud.stream.rabbit.bindings.certificateOrderedSubscribableChannel.consumer.binding-routing-key=creds.certificate.ordered
#sets queues routing key

spring.cloud.stream.bindings.certificateOrderedSubscribableChannel.consumer.max-attempts=2
#sets maximum attempts to receive the message upon errors
########################################################################################

spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true

logging.level.org.springframework.cloud.sleuth=DEBUG
